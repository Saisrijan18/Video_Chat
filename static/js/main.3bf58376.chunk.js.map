{"version":3,"sources":["context/VideoContext.js","assests/video.svg","assests/man.svg","assests/video-off.svg","assests/msg_illus.svg","assests/msg.svg","assests/share_screen.svg","context/VideoState.js","components/Video/Video.js","assests/phone.gif","assests/teams.mp3","assests/hang.svg","components/options/Options.js","components/Footer/Footer.js","Home.js","App.js","reportWebVitals.js","serviceWorker.js","index.js","components/options/Options.module.css"],"names":["VideoContext","createContext","socket","io","VideoState","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","chat","setChat","name","setName","call","setCall","me","setMe","userName","setUserName","otherUser","setOtherUser","myVdoStatus","setMyVdoStatus","userVdoStatus","setUserVdoStatus","myMicStatus","setMyMicStatus","userMicStatus","setUserMicStatus","msgRcv","setMsgRcv","screenShare","setScreenShare","myVideo","useRef","userVideo","connectionRef","screenTrackRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","localStorage","getItem","on","id","window","location","reload","type","currentMediaStatus","from","callerName","signal","isReceivingCall","value","msg","sender","setTimeout","Provider","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","console","log","leaveCall","destroy","answerCall","to","myMediaStatus","sendMsg","timestamp","Date","now","leaveCall1","updateVideo","currentStatus","getVideoTracks","enabled","updateMic","getAudioTracks","handleScreenSharing","onended","getDisplayMedia","cursor","screenTrack","getTracks","replaceTrack","streams","find","track","kind","catch","error","message","fullScreen","e","elem","target","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","Search","Input","Video","useContext","sendMsgFunc","setSendMsg","isModalVisible","setIsModalVisible","dummy","scrollIntoView","behavior","showModal","showVal","notification","open","description","icon","MessageOutlined","style","color","className","textAlign","height","playsInline","muted","onClick","ref","autoPlay","opacity","backgroundColor","position","size","UserOutlined","tabIndex","transform","aria-label","aria-hidden","src","Msg","alt","title","footer","visible","onOk","onCancel","maxHeight","length","map","Msg_Illus","placeholder","allowClear","enterButton","onChange","onSearch","ScreenShare","VideoIcon","VideoOff","top","left","padding","Options","idToCall","setIdToCall","Audio","play","pause","classes","marginBottom","prefix","maxLength","suffix","setItem","text","CopyOutlined","success","marginRight","InfoCircleOutlined","variant","Hang","PhoneOutlined","Teams","loop","display","justifyContent","Phone","Footer","HeartTwoTone","twoToneColor","href","rel","Home","onLine","alert","cookies","document","cookie","split","i","eqPos","indexOf","substr","width","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.3bf58376.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nconst VideoContext = createContext();\r\nexport default VideoContext;\r\n","export default __webpack_public_path__ + \"static/media/video.e038b670.svg\";","export default __webpack_public_path__ + \"static/media/man.2e482fe5.svg\";","export default __webpack_public_path__ + \"static/media/video-off.81281c31.svg\";","export default __webpack_public_path__ + \"static/media/msg_illus.a7fd59ce.svg\";","export default __webpack_public_path__ + \"static/media/msg.590bd963.svg\";","export default __webpack_public_path__ + \"static/media/share_screen.2998de9b.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport VideoContext from \"./VideoContext\";\r\nimport { io } from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport { message } from \"antd\";\r\n\r\nconst URL = \"https://fathomless-tundra-67025.herokuapp.com/\";\r\n// const SERVER_URL = \"http://localhost:5000/\";\r\n\r\nexport const socket = io(URL);\r\n\r\nconst VideoState = ({ children }) => {\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState();\r\n  const [chat, setChat] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [call, setCall] = useState({});\r\n  const [me, setMe] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [otherUser, setOtherUser] = useState(\"\");\r\n  const [myVdoStatus, setMyVdoStatus] = useState(true);\r\n  const [userVdoStatus, setUserVdoStatus] = useState();\r\n  const [myMicStatus, setMyMicStatus] = useState(true);\r\n  const [userMicStatus, setUserMicStatus] = useState();\r\n  const [msgRcv, setMsgRcv] = useState(\"\");\r\n  const [screenShare, setScreenShare] = useState(false)\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n  const screenTrackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n        myVideo.current.srcObject = currentStream;\r\n      });\r\n    if (localStorage.getItem(\"name\")) {\r\n      setName(localStorage.getItem(\"name\"));\r\n    }\r\n    socket.on(\"me\", (id) => setMe(id));\r\n    socket.on(\"endCall\", () => {\r\n      window.location.reload();\r\n    });\r\n\r\n    socket.on(\"updateUserMedia\", ({ type, currentMediaStatus }) => {\r\n      if (currentMediaStatus !== null || currentMediaStatus !== []) {\r\n        switch (type) {\r\n          case \"video\":\r\n            setUserVdoStatus(currentMediaStatus);\r\n            break;\r\n          case \"mic\":\r\n            setUserMicStatus(currentMediaStatus);\r\n            break;\r\n          default:\r\n            setUserMicStatus(currentMediaStatus[0]);\r\n            setUserVdoStatus(currentMediaStatus[1]);\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\r\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n    });\r\n\r\n    socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\r\n      setMsgRcv({ value, sender });\r\n      setTimeout(() => {\r\n        setMsgRcv({});\r\n      }, 2000);\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(chat);\r\n  // }, [chat]);\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    setOtherUser(call.from);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answerCall\", {\r\n        signal: data,\r\n        to: call.from,\r\n        userName: name,\r\n        type: \"both\",\r\n        myMediaStatus: [myMicStatus, myVdoStatus],\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n    console.log(connectionRef.current);\r\n  };\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n    setOtherUser(id);\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"callUser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on(\"callAccepted\", ({ signal, userName }) => {\r\n      setCallAccepted(true);\r\n      setUserName(userName);\r\n      peer.signal(signal);\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"both\",\r\n        currentMediaStatus: [myMicStatus, myVdoStatus],\r\n      });\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n    console.log(connectionRef.current);\r\n  };\r\n\r\n  const updateVideo = () => {\r\n    setMyVdoStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"video\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getVideoTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n  const updateMic = () => {\r\n    setMyMicStatus((currentStatus) => {\r\n      socket.emit(\"updateMyMedia\", {\r\n        type: \"mic\",\r\n        currentMediaStatus: !currentStatus,\r\n      });\r\n      stream.getAudioTracks()[0].enabled = !currentStatus;\r\n      return !currentStatus;\r\n    });\r\n  };\r\n\r\n  \r\n    //SCREEN SHARING \r\n    const handleScreenSharing = () => {\r\n\r\n      if(!myVdoStatus){\r\n        message.error(\"Turn on your video to share the content\", 2);\r\n        return;\r\n      }\r\n    \r\n      if (!screenShare) {\r\n        navigator.mediaDevices\r\n          .getDisplayMedia({ cursor: true })\r\n          .then((currentStream) => {\r\n            const screenTrack = currentStream.getTracks()[0];\r\n\r\n  \r\n              // replaceTrack (oldTrack, newTrack, oldStream);\r\n              connectionRef.current.replaceTrack(\r\n                connectionRef.current.streams[0]\r\n                  .getTracks()\r\n                  .find((track) => track.kind === 'video'),\r\n                screenTrack,\r\n                stream\r\n              );\r\n  \r\n            // Listen click end\r\n            screenTrack.onended = () => {\r\n              connectionRef.current.replaceTrack(\r\n                  screenTrack,\r\n                  connectionRef.current.streams[0]\r\n                    .getTracks()\r\n                    .find((track) => track.kind === 'video'),\r\n                  stream\r\n                );\r\n\r\n              myVideo.current.srcObject = stream;\r\n              setScreenShare(false);\r\n            };\r\n  \r\n            myVideo.current.srcObject = currentStream;\r\n            screenTrackRef.current = screenTrack;\r\n            setScreenShare(true);\r\n          }).catch((error) => {\r\n            console.log(\"No stream for sharing\")\r\n          });\r\n      } else {\r\n        screenTrackRef.current.onended();\r\n      }\r\n    };\r\n\r\n     //full screen\r\n     const fullScreen = (e) => {\r\n      const elem = e.target;\r\n  \r\n      if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n      } else if (elem.mozRequestFullScreen) {\r\n        /* Firefox */\r\n        elem.mozRequestFullScreen();\r\n      } else if (elem.webkitRequestFullscreen) {\r\n        /* Chrome, Safari & Opera */\r\n        elem.webkitRequestFullscreen();\r\n      } else if (elem.msRequestFullscreen) {\r\n        /* IE/Edge */\r\n        elem.msRequestFullscreen();\r\n      }\r\n    };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n\r\n    connectionRef.current.destroy();\r\n    socket.emit(\"endCall\", { id: otherUser });\r\n    window.location.reload();\r\n  };\r\n\r\n  const leaveCall1 = () => {\r\n    socket.emit(\"endCall\", { id: otherUser });\r\n  };\r\n  const sendMsg = (value) => {\r\n    socket.emit(\"msgUser\", { name, to: otherUser, msg: value, sender: name });\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"sent\";\r\n    msg.timestamp = Date.now();\r\n    msg.sender = name;\r\n    setChat([...chat, msg]);\r\n  };\r\n\r\n  return (\r\n    <VideoContext.Provider\r\n      value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n        setName,\r\n        callEnded,\r\n        me,\r\n        callUser,\r\n        leaveCall,\r\n        answerCall,\r\n        sendMsg,\r\n        msgRcv,\r\n        chat,\r\n        setChat,\r\n        setMsgRcv,\r\n        setOtherUser,\r\n        leaveCall1,\r\n        userName,\r\n        myVdoStatus,\r\n        setMyVdoStatus,\r\n        userVdoStatus,\r\n        setUserVdoStatus,\r\n        updateVideo,\r\n        myMicStatus,\r\n        userMicStatus,\r\n        updateMic,\r\n        screenShare,\r\n        handleScreenSharing,\r\n        fullScreen\r\n      }}\r\n    >\r\n      {children}\r\n    </VideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default VideoState;\r\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport \"./Video.css\";\r\nimport { Card, Modal, Button, Input, notification, Avatar } from \"antd\";\r\nimport Man from \"../../assests/man.svg\";\r\nimport VideoIcon from \"../../assests/video.svg\";\r\nimport { io } from \"socket.io-client\";\r\nimport VideoOff from \"../../assests/video-off.svg\";\r\n// import Profile from \"../../assests/profile.svg\";\r\nimport Msg_Illus from \"../../assests/msg_illus.svg\";\r\nimport Msg from \"../../assests/msg.svg\";\r\nimport ScreenShare from '../../assests/share_screen.svg'\r\nimport { UserOutlined, MessageOutlined } from \"@ant-design/icons\";\r\n\r\nimport { socket } from \"../../context/VideoState\";\r\n\r\n// const socket = io()\r\nconst { Search } = Input;\r\nconst Video = () => {\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n    setName,\r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall,\r\n    sendMsg: sendMsgFunc,\r\n    msgRcv,\r\n    chat,\r\n    setChat,\r\n    userName,\r\n    myVdoStatus,\r\n    screenShare,\r\n    fullScreen,\r\n    handleScreenSharing,\r\n    userVdoStatus,\r\n    updateVideo,\r\n    myMicStatus,\r\n    userMicStatus,\r\n    updateMic,\r\n  } = useContext(VideoContext);\r\n\r\n  const [sendMsg, setSendMsg] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  socket.on(\"msgRcv\", ({ name, msg: value, sender }) => {\r\n    let msg = {};\r\n    msg.msg = value;\r\n    msg.type = \"rcv\";\r\n    msg.sender = sender;\r\n    msg.timestamp = Date.now();\r\n    setChat([...chat, msg]);\r\n  });\r\n\r\n  const dummy = useRef();\r\n\r\n  useEffect(() => {\r\n    if (dummy?.current) dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chat]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    if (value && value.length) sendMsgFunc(value);\r\n    setSendMsg(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (msgRcv.value && !isModalVisible) {\r\n      notification.open({\r\n        message: \"\",\r\n        description: `${msgRcv.sender}: ${msgRcv.value}`,\r\n        icon: <MessageOutlined style={{ color: \"#108ee9\" }} />,\r\n      });\r\n    }\r\n  }, [msgRcv]);\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {stream ? (\r\n        <div\r\n          style={{ textAlign: \"center\" }}\r\n          className=\"card\"\r\n          id={callAccepted && !callEnded ? \"video1\" : \"video3\"}\r\n        >\r\n          <div style={{ height: \"2rem\" }}>\r\n            <h3>{myVdoStatus && name}</h3>\r\n          </div>\r\n          <div className=\"video-avatar-container\">\r\n            <video\r\n              playsInline\r\n              muted\r\n              onClick={fullScreen}\r\n              ref={myVideo}\r\n              autoPlay\r\n              className=\"video-active\"\r\n              style={{\r\n                opacity: `${myVdoStatus ? \"1\" : \"0\"}`,\r\n              }}\r\n            />\r\n\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#116\",\r\n                position: \"absolute\",\r\n                opacity: `${myVdoStatus ? \"-1\" : \"2\"}`,\r\n              }}\r\n              size={98}\r\n              icon={!name && <UserOutlined />}\r\n            >\r\n              {name}\r\n            </Avatar>\r\n          </div>\r\n\r\n          <div className=\"iconsDiv\">\r\n            <div\r\n              className=\"icons\"\r\n              onClick={() => {\r\n                updateMic();\r\n              }}\r\n              tabIndex=\"0\"\r\n            >\r\n              <i\r\n                className={`fa fa-microphone${myMicStatus ? \"\" : \"-slash\"}`}\r\n                style={{ transform: \"scaleX(-1)\" }}\r\n                aria-label={`${myMicStatus ? \"mic on\" : \"mic off\"}`}\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n            </div>\r\n\r\n            {callAccepted && !callEnded && (\r\n              <div\r\n                className=\"icons\"\r\n                onClick={() => {\r\n                  setIsModalVisible(!isModalVisible);\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                <img src={Msg} alt=\"chat icon\" />\r\n              </div>\r\n            )}\r\n            <Modal\r\n              title=\"Chat\"\r\n              footer={null}\r\n              visible={isModalVisible}\r\n              onOk={() => showModal(false)}\r\n              onCancel={() => showModal(false)}\r\n              style={{ maxHeight: \"100px\" }}\r\n            >\r\n              {chat.length ? (\r\n                <div className=\"msg_flex\">\r\n                  {chat.map((msg) => (\r\n                    <div\r\n                      className={msg.type === \"sent\" ? \"msg_sent\" : \"msg_rcv\"}\r\n                    >\r\n                      {msg.msg}\r\n                    </div>\r\n                  ))}\r\n                  <div ref={dummy} id=\"no_border\"></div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"chat_img_div\">\r\n                  <img src={Msg_Illus} alt=\"msg_illus\" className=\"img_illus\" />\r\n                </div>\r\n              )}\r\n              <Search\r\n                placeholder=\"your message\"\r\n                allowClear\r\n                className=\"input_msg\"\r\n                enterButton=\"Send 🚀\"\r\n                onChange={(e) => setSendMsg(e.target.value)}\r\n                value={sendMsg}\r\n                size=\"large\"\r\n                onSearch={onSearch}\r\n              />\r\n            </Modal>\r\n            {callAccepted && !callEnded && (\r\n              <div\r\n                className=\"icons\"\r\n                onClick={() => handleScreenSharing()} \r\n                tabIndex=\"0\"\r\n              >\r\n                <img src={ScreenShare} alt=\"share screen\" />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"icons\" onClick={() => updateVideo()} tabIndex=\"0\">\r\n              {myVdoStatus ? (\r\n                <img src={VideoIcon} alt=\"video on icon\" />\r\n              ) : (\r\n                <img src={VideoOff} alt=\"video off icon\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bouncing-loader\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n\r\n      {callAccepted && !callEnded && userVideo && (\r\n        <div className=\"card2\" style={{ textAlign: \"center\" }} id=\"video2\">\r\n          <div style={{ height: \"2rem\" }}>\r\n            <h3>{userVdoStatus && (call.name || userName)}</h3>\r\n          </div>\r\n\r\n          <div className=\"video-avatar-container\">\r\n            <video\r\n              playsInline\r\n              ref={userVideo}             \r\n              onClick={fullScreen}\r\n              autoPlay\r\n              className=\"video-active\"\r\n              style={{\r\n                opacity: `${userVdoStatus ? \"1\" : \"0\"}`,\r\n              }}\r\n            />\r\n\r\n            <Avatar\r\n              style={{\r\n                backgroundColor: \"#116\",\r\n                position: \"absolute\",\r\n                opacity: `${userVdoStatus ? \"-1\" : \"2\"}`,\r\n              }}\r\n              size={98}\r\n              icon={!(userName || call.name) && <UserOutlined />}\r\n            >\r\n              {userName || call.name}\r\n            </Avatar>\r\n            {!userMicStatus && (\r\n              <i\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"0\",\r\n                  padding: \"0.3rem\",\r\n                  backgroundColor: \"#fefefebf\",\r\n                }}\r\n                className=\"fad fa-volume-mute fa-2x\"\r\n                aria-hidden=\"true\"\r\n                aria-label=\"microphone muted\"\r\n              ></i>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","export default __webpack_public_path__ + \"static/media/phone.b2c1ae6b.gif\";","export default __webpack_public_path__ + \"static/media/teams.23d1d865.mp3\";","export default __webpack_public_path__ + \"static/media/hang.a09ef7b4.svg\";","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { Input, Button, Tooltip, Modal, message } from \"antd\";\r\nimport Phone from \"../../assests/phone.gif\";\r\nimport Teams from \"../../assests/teams.mp3\";\r\nimport * as classes from \"./Options.module.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport VideoContext from \"../../context/VideoContext\";\r\nimport Hang from \"../../assests/hang.svg\";\r\nimport {\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  UserOutlined,\r\n  CopyOutlined,\r\n  InfoCircleOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { socket } from \"../../context/VideoState\";\r\n\r\nconst Options = () => {\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const Audio = useRef();\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n    setName,\r\n    callEnded,\r\n    me,\r\n    callUser,\r\n    leaveCall,\r\n    answerCall,\r\n    otherUser,\r\n    setOtherUser,\r\n    leaveCall1,\r\n  } = useContext(VideoContext);\r\n\r\n  useEffect(() => {\r\n    if (isModalVisible) {\r\n      Audio?.current?.play();\r\n    } else Audio?.current?.pause();\r\n  }, [isModalVisible]);\r\n\r\n  const showModal = (showVal) => {\r\n    setIsModalVisible(showVal);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    leaveCall1();\r\n    window.location.reload();\r\n  };\r\n  useEffect(() => {\r\n    if (call.isReceivingCall && !callAccepted) {\r\n      setIsModalVisible(true);\r\n      setOtherUser(call.from);\r\n    } else setIsModalVisible(false);\r\n  }, [call.isReceivingCall]);\r\n\r\n  return (\r\n    <div className={classes.options}>\r\n      <div style={{ marginBottom: \"0.5rem\" }}>\r\n        <h2>Account Info</h2>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Your name\"\r\n          prefix={<UserOutlined />}\r\n          maxLength={15}\r\n          suffix={<small>{name.length}/15</small>}\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n            localStorage.setItem(\"name\", e.target.value);\r\n          }}\r\n          className={classes.inputgroup}\r\n        />\r\n\r\n        <div className={classes.share_options}>\r\n          <CopyToClipboard text={me}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<CopyOutlined />}\r\n              className={classes.btn}\r\n              tabIndex=\"0\"\r\n              onClick={() => message.success(\"Code copied successfully!\")}\r\n            >\r\n              Copy code\r\n            </Button>\r\n          </CopyToClipboard>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div style={{ marginBottom: \"0.5rem\" }}>\r\n        <h2>Make a call</h2>\r\n\r\n        <Input\r\n          placeholder=\"Enter code to call\"\r\n          size=\"large\"\r\n          className={classes.inputgroup}\r\n          value={idToCall}\r\n          onChange={(e) => setIdToCall(e.target.value)}\r\n          style={{ marginRight: \"0.5rem\", marginBottom: \"0.5rem\" }}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          suffix={\r\n            <Tooltip title=\"Enter code of the other user\">\r\n              <InfoCircleOutlined style={{ color: \"rgba(0,0,0,.45)\" }} />\r\n            </Tooltip>\r\n          }\r\n        />\r\n\r\n        {callAccepted && !callEnded ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={leaveCall}\r\n            className={classes.hang}\r\n            tabIndex=\"0\"\r\n          >\r\n            <img src={Hang} alt=\"hang up\" style={{ height: \"15px\" }} />\r\n            &nbsp; Hang up\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PhoneOutlined />}\r\n            onClick={() => {\r\n              if (name.length) callUser(idToCall);\r\n              else message.error(\"Please enter your name to call!\");\r\n            }}\r\n            className={classes.btn}\r\n            tabIndex=\"0\"\r\n          >\r\n            Call\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {call.isReceivingCall && !callAccepted && (\r\n        <>\r\n          <audio src={Teams} loop ref={Audio} />\r\n          <Modal\r\n            title=\"Incoming Call\"\r\n            visible={isModalVisible}\r\n            onOk={() => showModal(false)}\r\n            onCancel={handleCancel}\r\n            footer={null}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <h1>\r\n                {call.name} is calling you:{\" \"}\r\n                <img\r\n                  src={Phone}\r\n                  alt=\"phone ringing\"\r\n                  className={classes.phone}\r\n                  style={{ display: \"inline-block\" }}\r\n                />\r\n              </h1>\r\n            </div>\r\n            <div className={classes.btnDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.answer}\r\n                color=\"#29bb89\"\r\n                icon={<PhoneOutlined />}\r\n                onClick={() => {\r\n                  answerCall();\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Answer\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.decline}\r\n                icon={<PhoneOutlined />}\r\n                onClick={() => {\r\n                  setIsModalVisible(false);\r\n                  Audio.current.pause();\r\n                }}\r\n                tabIndex=\"0\"\r\n              >\r\n                Decline\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport { HeartTwoTone } from \"@ant-design/icons\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      Made with <HeartTwoTone twoToneColor=\"#eb2f96\" /> By{\" \"}\r\n      <a\r\n        className=\"footer__link\"\r\n        href=\"https://github.com/Saisrijan18\"\r\n        target=\"_blank\"\r\n        style={{ color: \"#fdfdfd\" }}\r\n        rel=\"noreferrer\"\r\n      >\r\n        Saisrijan\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useEffect } from \"react\";\r\n\r\nimport Video from \"./components/Video/Video\";\r\nimport VideoState from \"./context/VideoState\";\r\n\r\nimport Options from \"./components/options/Options\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    if (!navigator.onLine) alert(\"Connect to internet!\");\r\n  }, [navigator]);\r\n \r\n useEffect(()=>{\r\n    var cookies = document.cookie.split(\";\");\r\n\r\n    for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i];\r\n        var eqPos = cookie.indexOf(\"=\");\r\n        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n        document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n    }\r\n }, [])\r\n  return (\r\n    <VideoState>\r\n      <div className=\"App\" style={{ height: \"100%\", width: \"100%\" }}>\r\n        <Video />\r\n        <Options />\r\n        {/* <Footer /> */}\r\n      </div>\r\n    </VideoState>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__2a7vD\",\"btn\":\"Options_btn__2KmHI\",\"inputgroup\":\"Options_inputgroup__2WN0b\",\"btnDiv\":\"Options_btnDiv__165LZ\",\"phone\":\"Options_phone__18c5s\",\"answer\":\"Options_answer__2bG95\",\"decline\":\"Options_decline__3U1Sz\",\"hang\":\"Options_hang__15CYn\",\"share_options\":\"Options_share_options__2cAQ4\",\"share_social\":\"Options_share_social__J39v5\",\"share_icon\":\"Options_share_icon__2uhXv\"};"],"sourceRoot":""}